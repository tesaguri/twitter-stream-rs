name: CI

on: [push, pull_request]

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  test:
    name: Test
    needs: [fmt]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
          - '1.51.0'
        features:
          - ''
          - hyper
    steps:
      - run: echo 'RUSTDOCFLAGS=--cfg=twitter_stream_ci_msrv' >> "$GITHUB_ENV"
        if: |
          matrix.toolchain != 'stable'
          && matrix.toolchain != 'beta'
          && matrix.toolchain != 'nightly'
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.features }}
      - name: Build
        if: matrix.features == 'hyper'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --no-default-features --features=${{ matrix.features }}
      - name: Test
        if: matrix.features == 'hyper'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features=${{ matrix.features }}
      - name: Check
        if: matrix.features != 'hyper'
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --verbose --no-default-features --features=${{ matrix.features }}
      - name: Check Rustdoc
        if: matrix.features == 'hyper'
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --no-default-features --features=${{ matrix.features }}

  miri:
    name: Soundness test (Miri)
    needs: [fmt]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: miri
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo miri setup
      - name: cargo miri test
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test --no-default-features -- -- soundness
